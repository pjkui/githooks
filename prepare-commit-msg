#!D:\Python27\python
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.
print 'start commit-msg'

import sys
import os
import re
import json

import sys
import subprocess
import tempfile
# str = json.dumps(sys.argv)
# print str
# print 'start sending e-mail'
branch_name = subprocess.check_output(
    'git symbolic-ref --short HEAD', shell=True).strip().decode('utf-8')
new_msgs = []
with open(sys.argv[1], 'r') as commit_message_file:
    commit_message = list(commit_message_file)
    for line in commit_message:
        line = line.strip()
        print line
        line = '[' + branch_name + ']' + line
        # line = '[master]'+ line
        # line = line[0:-3]

        newline = ''
        # find all emails
        emails = re.findall(
            r'([\+a-z0-9_\.-]+@[\da-z\.-]+\.[a-z\.]{2,20})', line)
        for emailStr in emails:
            # remove emails from comments
            newline = line.replace(emailStr, '')
        emailTo = ';'.join(emails)
        print 'after:' + newline
        if len(newline) > 0:
            new_msgs.append(newline)

    # commit_message_file.seek(0)

    #     # write emails to file
    commit_message_file.close()
if len(new_msgs) > 0:
    commit_message_file = open(sys.argv[1], 'w')
    for line in new_msgs:
        commit_message_file.write(line)
    commit_message_file.close()
    if len(emailTo) > 0:
        tempDir = tempfile.gettempdir()
        emailsFile = open(tempDir + '/emails.txt', 'w')
        emailsFile.write(emailTo)
        emailsFile.close()
print 'end commit-msg'
